name: uq_workflow

tasks:
  - schemas: [generate_volume_element_from_voronoi]
    inputs:
      homog_label: SX
      VE_grid_size: [4, 4, 4] # <------ change this!
      microstructure_seeds::from_file:
        path: "C:/Users/adamj/dropbox/code_db/python_dev/matflow-new/demo_workflows/data/seeds.txt" # <------ change this!
        delimiter: " "
        number: 2 # <------ change this! (number of grains per simulation)
        box_size: [1, 1, 1]
        phase_label: Al
      orientations::from_file:
        path: "C:/Users/adamj/dropbox/code_db/python_dev/matflow-new/demo_workflows/data/oris.txt" # <------ change this!
        delimiter: " "
        number: 2 # <------ change this! (number of grains per simulation)
        representation:
          type: euler
          euler_definition: bunge
          euler_is_degrees: false
        unit_cell_alignment: { x: a, y: b, z: c }
    sequences:
      - path: inputs.orientations.start_index
        values::from_range:
          start: 0
          stop: 4 # <------ change this! (total number of lines in orientations file)
          step: 2 # <------ change this! (number of grains per simulation)
        nesting_order: 0
      - path: inputs.microstructure_seeds.start_index
        values::from_range:
          start: 0
          stop: 4 # <------ change this! (total number of lines in seeds file)
          step: 2 # <------ change this! (number of grains per simulation)
        nesting_order: 0

  - schemas: [simulate_VE_loading_damask]
    nesting_order:
      inputs.volume_element: 0
    groups:
      - name: all_simulations
    inputs:
      load_case::uniaxial:
        total_time: 50 # <------ change this!
        num_increments: 100 # <------ change this!
        direction: x
        target_def_grad_rate: 1.0e-3
      homogenization:
        SX:
          mechanical: { type: "pass" }
          N_constituents: 1
      damask_phases:
        Al:
          lattice: cF
          mechanical:
            output: [F, P, F_e, F_p, L_p, O]
            elastic:
              type: Hooke
              C_11: 106750000000
              C_12: 60410000000
              C_44: 28340000000
            plastic:
              type: phenopowerlaw
              N_sl: [12]
              a_sl: 2.25
              atol_xi: 1
              dot_gamma_0_sl: 0.001
              h_0_sl-sl: 75.0e+6
              h_sl-sl: [1, 1, 1.4, 1.4, 1.4, 1.4, 1.4]
              n_sl: 20
              output: [xi_sl]
              xi_0_sl: [31.0e+6]
              xi_inf_sl: [63.0e+6]
      damask_post_processing:
        - name: add_stress_Cauchy
          args: { P: P, F: F }
          opts: { add_Mises: true }
        - name: add_strain
          args: { F: F, t: V, m: 0 }
          opts: { add_Mises: true }
        - name: add_strain
          args: { F: F_p, t: V, m: 0 }
          opts: { add_Mises: true }
        - name: add_IPF_color
          args: { l: [0, 0, 1] }
      VE_response_data:
        phase_data:
          - field_name: sigma_vM
            phase_name: Al
            out_name: vol_avg_equivalent_stress
            transforms: [{ mean_along_axes: 1 }]
          - field_name: epsilon_V^0(F)_vM
            phase_name: Al
            out_name: vol_avg_equivalent_strain
            transforms: [{ mean_along_axes: 1 }]
          - field_name: epsilon_V^0(F_p)_vM
            phase_name: Al
            out_name: vol_avg_equivalent_plastic_strain
            transforms: [{ mean_along_axes: 1 }]
        field_data:
          - field_name: phase
          - field_name: O
        grain_data:
          - field_name: O
            increments: [{ values: [0, -1] }]
      damask_viz:
        fields: [F, F_p, P, sigma_vM, IPFcolor_(0 0 1), phase]
        increments: [{ start: 10, stop: 20, step: 2 }]

  - schemas: [dump_all_yield_stresses]
    inputs:
      yield_point: 0.002
      dump_path: "C:/Users/adamj/dropbox/code_db/python_dev/matflow-new/demo_workflows/data/yield_stresses.txt" # <------ change this!
